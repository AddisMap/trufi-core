{
    "@@locale": "en",
    "@@last_modified": "2021-04-13T14:58:27+02:00",
    "title": "Trufi App",
    "@title": {
        "notes": [
            {
                "from": "developer",
                "value": "The application's name"
            }
        ]
    },
    "tagline": "Public transportation in {city}",
    "@tagline": {
        "notes": [
            {
                "from": "developer",
                "value": "A short marketing sentence that describes the app"
            }
        ],
        "placeholders": {
            "city": {
                "example": "Karlsruhe"
            }
        }
    },
    "description": "The best way to travel with trufis, micros and buses through {cityName}.",
    "@description": {
        "notes": [
            {
                "from": "developer",
                "value": "A sentence that describes the application's purpose"
            }
        ],
        "placeholders": {
            "cityName": {
                "example": "Karlsruhe"
            }
        }
    },
    "version": "Version {version}",
    "@version": {
        "notes": [
            {
                "from": "developer",
                "value": "The application's version"
            }
        ],
        "placeholders": {
            "version": {
                "example": "1.0"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{version} example: 1.0",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "alertLocationServicesDeniedTitle": "No location",
    "@alertLocationServicesDeniedTitle": {
        "notes": [
            {
                "from": "developer",
                "value": "Title of dialog that explains that access to location services was denied"
            }
        ]
    },
    "alertLocationServicesDeniedMessage": "Please make sure your device has GPS and the Location settings are activated.",
    "@alertLocationServicesDeniedMessage": {
        "notes": [
            {
                "from": "developer",
                "value": "Text of dialog that explains that access to location services was denied"
            }
        ]
    },
    "commonOK": "OK",
    "@commonOK": {
        "notes": [
            {
                "from": "developer",
                "value": "OK button label"
            }
        ]
    },
    "commonCancel": "Cancel",
    "@commonCancel": {
        "notes": [
            {
                "from": "developer",
                "value": "Cancel button label"
            }
        ]
    },
    "commonGoOffline": "Go offline",
    "@commonGoOffline": {
        "notes": [
            {
                "from": "developer",
                "value": "Go offline button label"
            }
        ]
    },
    "commonGoOnline": "Go online",
    "@commonGoOnline": {
        "notes": [
            {
                "from": "developer",
                "value": "Go online button label"
            }
        ]
    },
    "commonDestination": "Destination",
    "@commonDestination": {
        "notes": [
            {
                "from": "developer",
                "value": "Destination field label"
            }
        ]
    },
    "commonOrigin": "Origin",
    "@commonOrigin": {
        "notes": [
            {
                "from": "developer",
                "value": "Origin field label"
            }
        ]
    },
    "commonNoInternet": "No internet connection.",
    "@commonNoInternet": {
        "notes": [
            {
                "from": "developer",
                "value": "Message when internet connection is lost"
            }
        ]
    },
    "commonFailLoading": "Failed to load data",
    "@commonFailLoading": {
        "notes": [
            {
                "from": "developer",
                "value": "Message when data could not be loaded"
            }
        ]
    },
    "commonUnknownError": "Unknown error",
    "@commonUnknownError": {
        "notes": [
            {
                "from": "developer",
                "value": "Message when an unknown error has occured"
            }
        ]
    },
    "commonError": "Error",
    "@commonError": {
        "notes": [
            {
                "from": "developer",
                "value": "Message when an error has occured"
            }
        ]
    },
    "noRouteError": "Sorry, we could not find a route. What do you want to do?",
    "@noRouteError": {
        "notes": [
            {
                "from": "developer",
                "value": "Message when no route could be found after a route search"
            }
        ]
    },
    "noRouteErrorActionCancel": "Try another destination",
    "@noRouteErrorActionCancel": {
        "notes": [
            {
                "from": "developer",
                "value": "Button label to try another destination when no route could be found"
            }
        ]
    },
    "noRouteErrorActionReportMissingRoute": "Report a missing route",
    "@noRouteErrorActionReportMissingRoute": {
        "notes": [
            {
                "from": "developer",
                "value": "Button label to report a missing route when no route could be found"
            }
        ]
    },
    "noRouteErrorActionShowCarRoute": "Show route by car",
    "@noRouteErrorActionShowCarRoute": {
        "notes": [
            {
                "from": "developer",
                "value": "Button label to show the car route when no route could be found"
            }
        ]
    },
    "errorServerUnavailable": "We're sorry. The trip planner is temporarily unavailable. Please try again later.",
    "@errorServerUnavailable": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when the trip planning server was not available"
            }
        ]
    },
    "errorOutOfBoundary": "Trip is not possible. You might be trying to plan a trip outside the map data boundary.",
    "@errorOutOfBoundary": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because it would be outside of map data boundaries"
            }
        ]
    },
    "errorPathNotFound": "Trip is not possible. Your start or end point might not be safely accessible (for instance, you might be starting on a residential street connected only to a highway).",
    "@errorPathNotFound": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the start or end point is not safely accessible"
            }
        ]
    },
    "errorNoTransitTimes": "No transit times available. The date may be past or too far in the future or there may not be transit service for your trip at the time you chose.",
    "@errorNoTransitTimes": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because there were no valid transit times available for the requested time"
            }
        ]
    },
    "errorServerTimeout": "The trip planner is taking way too long to process your request. Please try again later.",
    "@errorServerTimeout": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the server is taking too long to respond"
            }
        ]
    },
    "errorTrivialDistance": "Origin is within a trivial distance of the destination.",
    "@errorTrivialDistance": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because origin and destination are too close to each other"
            }
        ]
    },
    "errorServerCanNotHandleRequest": "The request has errors that the server is not willing or able to process.",
    "@errorServerCanNotHandleRequest": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the request had errors"
            }
        ]
    },
    "errorUnknownOrigin": "Origin is unknown. Can you be a bit more descriptive?",
    "@errorUnknownOrigin": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the origin was not found"
            }
        ]
    },
    "errorUnknownDestination": "Destination is unknown. Can you be a bit more descriptive?",
    "@errorUnknownDestination": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the destination was not found"
            }
        ]
    },
    "errorUnknownOriginDestination": "Both origin and destination are unknown. Can you be a bit more descriptive?",
    "@errorUnknownOriginDestination": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because both origin and destination were not found"
            }
        ]
    },
    "errorNoBarrierFree": "Both origin and destination are not wheelchair accessible",
    "@errorNoBarrierFree": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because both origin and destination are not wheelchair accessible"
            }
        ]
    },
    "errorAmbiguousOrigin": "The trip planner is unsure of the location you want to start from. Please select from the following options, or be more specific.",
    "@errorAmbiguousOrigin": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the specified origin is ambiguous"
            }
        ]
    },
    "errorAmbiguousDestination": "The trip planner is unsure of the location you want to go to. Please select from the following options, or be more specific.",
    "@errorAmbiguousDestination": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the specified destination is ambiguous"
            }
        ]
    },
    "errorAmbiguousOriginDestination": "Both origin and destination are ambiguous. Please select from the following options, or be more specific.",
    "@errorAmbiguousOriginDestination": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when a trip could not be planned, because the specified origin and destination are ambiguous"
            }
        ]
    },
    "searchHintOrigin": "Choose starting point",
    "@searchHintOrigin": {
        "notes": [
            {
                "from": "developer",
                "value": "Placeholder text for the origin field (in search state)"
            }
        ]
    },
    "searchHintDestination": "Choose destination",
    "@searchHintDestination": {
        "notes": [
            {
                "from": "developer",
                "value": "Placeholder text for the destination field (in search state)"
            }
        ]
    },
    "searchItemChooseOnMap": "Choose on map",
    "@searchItemChooseOnMap": {
        "notes": [
            {
                "from": "developer",
                "value": "Search option that allows to choose a point on the map"
            }
        ]
    },
    "searchItemYourLocation": "Your location",
    "@searchItemYourLocation": {
        "notes": [
            {
                "from": "developer",
                "value": "Search option that allows to use the current user location"
            }
        ]
    },
    "searchItemNoResults": "No results",
    "@searchItemNoResults": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when no results were found for the search term that was provided"
            }
        ]
    },
    "searchTitlePlaces": "Places",
    "@searchTitlePlaces": {
        "notes": [
            {
                "from": "developer",
                "value": "Search section title for common places"
            }
        ]
    },
    "searchTitleRecent": "Recent",
    "@searchTitleRecent": {
        "notes": [
            {
                "from": "developer",
                "value": "Search section title for recent location"
            }
        ]
    },
    "searchTitleFavorites": "Favorites",
    "@searchTitleFavorites": {
        "notes": [
            {
                "from": "developer",
                "value": "Search section title for locations marked as favorites"
            }
        ]
    },
    "searchTitleResults": "Search Results",
    "@searchTitleResults": {
        "notes": [
            {
                "from": "developer",
                "value": "Search section title for results found for the provided search term"
            }
        ]
    },
    "searchPleaseSelectOrigin": "Select origin",
    "@searchPleaseSelectOrigin": {
        "notes": [
            {
                "from": "developer",
                "value": "Placeholder text for the origin field (in map-visible state)"
            }
        ]
    },
    "searchPleaseSelectDestination": "Select destination",
    "@searchPleaseSelectDestination": {
        "notes": [
            {
                "from": "developer",
                "value": "Placeholder text for the destination field (in map-visible state)"
            }
        ]
    },
    "searchFailLoadingPlan": "Failed to load plan.",
    "@searchFailLoadingPlan": {
        "notes": [
            {
                "from": "developer",
                "value": "Message that is displayed when the response of the trip planning request could not be received"
            }
        ]
    },
    "searchMapMarker": "Map Marker",
    "@searchMapMarker": {
        "notes": [
            {
                "from": "developer",
                "value": "Location name displayed in search fields that represents a location choosen on the map"
            }
        ]
    },
    "chooseLocationPageTitle": "Choose a point",
    "@chooseLocationPageTitle": {
        "notes": [
            {
                "from": "developer",
                "value": "Page title when choosing a location on the map"
            }
        ]
    },
    "chooseLocationPageSubtitle": "Pan & zoom map under pin",
    "@chooseLocationPageSubtitle": {
        "notes": [
            {
                "from": "developer",
                "value": "Page subtitle when choosing a location on the map"
            }
        ]
    },
    "instructionWalk": "Walk {duration} ({distance}) to\n{location}",
    "@instructionWalk": {
        "notes": [
            {
                "from": "developer",
                "value": "Itinerary instruction (walking)"
            }
        ],
        "placeholders": {
            "distance": {
                "example": "500 m"
            },
            "duration": {
                "example": "10 min"
            },
            "location": {
                "example": "Avenida Heroínas"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{duration} example: 10 min",
                        "context-type": "paramnotes"
                    },
                    {
                        "value": "{distance} example: 500 m",
                        "context-type": "paramnotes"
                    },
                    {
                        "value": "{location} example: Avenida Heroínas",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "instructionRide": "Ride {vehicle} for {duration} ({distance}) to\n{location}",
    "@instructionRide": {
        "notes": [
            {
                "from": "developer",
                "value": "Itinerary instruction (vehicle)"
            }
        ],
        "placeholders": {
            "vehicle": {
                "example": "Bus 100"
            },
            "distance": {
                "example": "500 m"
            },
            "duration": {
                "example": "10 min"
            },
            "location": {
                "example": "Avenida Heroínas"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{vehicle} example: Bus 100",
                        "context-type": "paramnotes"
                    },
                    {
                        "value": "{duration} example: 10 min",
                        "context-type": "paramnotes"
                    },
                    {
                        "value": "{distance} example: 500 m",
                        "context-type": "paramnotes"
                    },
                    {
                        "value": "{location} example: Avenida Heroínas",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "instructionVehicleBus": "Bus",
    "@instructionVehicleBus": {
        "notes": [
            {
                "from": "developer",
                "value": "Vehicle name (Bus)"
            }
        ]
    },
    "instructionVehicleMicro": "Micro",
    "@instructionVehicleMicro": {
        "notes": [
            {
                "from": "developer",
                "value": "Vehicle name (Micro)"
            }
        ]
    },
    "instructionVehicleMinibus": "Minibus",
    "@instructionVehicleMinibus": {
        "notes": [
            {
                "from": "developer",
                "value": "Vehicle name (Minibus)"
            }
        ]
    },
    "instructionVehicleTrufi": "Trufi",
    "@instructionVehicleTrufi": {
        "notes": [
            {
                "from": "developer",
                "value": "Vehicle name (Trufi)"
            }
        ]
    },
    "instructionVehicleCar": "Car",
    "@instructionVehicleCar": {
        "notes": [
            {
                "from": "developer",
                "value": "Vehicle name (Car)"
            }
        ]
    },
    "instructionVehicleGondola": "Gondola",
    "@instructionVehicleGondola": {
        "notes": [
            {
                "from": "developer",
                "value": "Vehicle name (Gondola)"
            }
        ]
    },
    "instructionDurationMinutes": "{value} min",
    "@instructionDurationMinutes": {
        "notes": [
            {
                "from": "developer",
                "value": "Itinerary leg duration"
            }
        ],
        "placeholders": {
            "value": {
                "example": "10"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{value} example: 10",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "instructionDistanceKm": "{value} km",
    "@instructionDistanceKm": {
        "notes": [
            {
                "from": "developer",
                "value": "Itinerary leg distance (km)"
            }
        ],
        "placeholders": {
            "value": {
                "example": "10"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{value} example: 10",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "instructionDistanceMeters": "{value} m",
    "@instructionDistanceMeters": {
        "notes": [
            {
                "from": "developer",
                "value": "Itinerary leg distance (m)"
            }
        ],
        "placeholders": {
            "value": {
                "example": "100"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{value} example: 100",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "menuConnections": "Show routes",
    "@menuConnections": {
        "notes": [
            {
                "from": "developer",
                "value": "Menu item that shows the map\/planned trip"
            }
        ]
    },
    "menuAbout": "About",
    "@menuAbout": {
        "notes": [
            {
                "from": "developer",
                "value": "Menu item that shows the about page"
            }
        ]
    },
    "menuTeam": "Team",
    "@menuTeam": {
        "notes": [
            {
                "from": "developer",
                "value": "Menu item that shows the team page"
            }
        ]
    },
    "menuFeedback": "Send Feedback",
    "@menuFeedback": {
        "notes": [
            {
                "from": "developer",
                "value": "Menu item that shows the feedback page"
            }
        ]
    },
    "menuOnline": "Online",
    "@menuOnline": {
        "notes": [
            {
                "from": "developer",
                "value": "Menu item that shows the state of online\/offline routing"
            }
        ]
    },
    "menuAppReview": "Rate the app",
    "@menuAppReview": {
        "notes": [
            {
                "from": "developer",
                "value": "Menu item that triggers a native widget to rate the app"
            }
        ]
    },
    "menuShareApp": "Share the app",
    "@menuShareApp": {
        "notes": [
            {
                "from": "developer",
                "value": "Menu item that triggers a native widget to rate the app"
            }
        ]
    },
    "shareAppText": "Download {appTitle}, the public transport app for {cityName}, at {url}",
    "@shareAppText": {
        "notes": [
            {
                "from": "developer",
                "value": "Text with URL that is used when sharing the app."
            }
        ],
        "placeholders": {
            "url": {
                "example": "https:\/\/trufi.share.url"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{url} example: https:\/\/trufi.share.url",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "feedbackContent": "Do you have suggestions for our app or found some errors in the data? We would love to hear from you! Please make sure to add your email address or telephone, so we can respond to you.",
    "@feedbackContent": {
        "notes": [
            {
                "from": "developer",
                "value": "Text displayed on the feedback page"
            }
        ]
    },
    "feedbackTitle": "Please e-mail us",
    "@feedbackTitle": {
        "notes": [
            {
                "from": "developer",
                "value": "Title displayed on the feedback page"
            }
        ]
    },
    "aboutContent": "We are a Bolivian and international team of people that love and support public transport. We have developed this app to make it easy for people to use the transport system in Cochabamba and the surrounding area.",
    "@aboutContent": {
        "notes": [
            {
                "from": "developer",
                "value": "Text displayed on the about page"
            }
        ]
    },
    "aboutLicenses": "Licenses",
    "@aboutLicenses": {
        "notes": [
            {
                "from": "developer",
                "value": "Button label to show licenses"
            }
        ]
    },
    "aboutOpenSource": "This app is released as open source on GitHub. Feel free to contribute or bring it to your own city.",
    "@aboutOpenSource": {
        "notes": [
            {
                "from": "developer",
                "value": "A note about open source"
            }
        ]
    },
    "teamContent": "We are an international team called Trufi Association that has created this app with the help of many volunteers! Do you want to improve the Trufi App and be part of our team? Please contact us via:",
    "@teamContent": {
        "notes": [
            {
                "from": "developer",
                "value": "Text displayed on the team page, followed by a email link"
            }
        ]
    },
    "teamSectionRepresentatives": "Representatives: {representatives}",
    "@teamSectionRepresentatives": {
        "notes": [
            {
                "from": "developer",
                "value": "List of representatives"
            }
        ],
        "placeholders": {
            "representatives": {
                "example": "Mario, Luigi"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{representatives} example: Mario, Luigi",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "teamSectionTeam": "Team: {teamMembers}",
    "@teamSectionTeam": {
        "notes": [
            {
                "from": "developer",
                "value": "List of team members"
            }
        ],
        "placeholders": {
            "teamMembers": {
                "example": "Peach, Toad, Daisy, Yoshi"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{teamMembers} example: Peach, Toad, Daisy, Yoshi",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "teamSectionTranslations": "Translations: {translators}",
    "@teamSectionTranslations": {
        "notes": [
            {
                "from": "developer",
                "value": "List of translators"
            }
        ],
        "placeholders": {
            "translators": {
                "example": "Bowser, Koopa, Gumba, Lakitu"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{translators} example: Bowser, Koopa, Gumba, Lakitu",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "teamSectionRoutes": "Routes: {routeContributors} and all users that uploaded routes to OpenStreetMap, such as {osmContributors}.\nContact us if you want to join the OpenStreetMap community!",
    "@teamSectionRoutes": {
        "notes": [
            {
                "from": "developer",
                "value": "List of route contributors"
            }
        ],
        "placeholders": {
            "osmContributors": {
                "example": "Kamek, Birdo, Toadette, Bowser Jr."
            },
            "routeContributors": {
                "example": "Wario, Waluigi, Rosalina"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{routeContributors} example: Wario, Waluigi, Rosalina",
                        "context-type": "paramnotes"
                    },
                    {
                        "value": "{osmContributors} example: Kamek, Birdo, Toadette, Bowser Jr.",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "donate": "Donate",
    "@donate": {
        "notes": [
            {
                "from": "developer",
                "value": "Donate menu item"
            }
        ]
    },
    "readOurBlog": "Read our blog",
    "@readOurBlog": {
        "notes": [
            {
                "from": "developer",
                "value": "Website menu item"
            }
        ]
    },
    "followOnFacebook": "Follow us on Facebook",
    "@followOnFacebook": {
        "notes": [
            {
                "from": "developer",
                "value": "Facebook menu item"
            }
        ]
    },
    "followOnTwitter": "Follow us on Twitter",
    "@followOnTwitter": {
        "notes": [
            {
                "from": "developer",
                "value": "Twitter menu item"
            }
        ]
    },
    "followOnInstagram": "Follow us on Instagram",
    "@followOnInstagram": {
        "notes": [
            {
                "from": "developer",
                "value": "Instagram menu item"
            }
        ]
    },
    "appReviewDialogTitle": "Enjoying Trufi?",
    "@appReviewDialogTitle": {
        "notes": [
            {
                "from": "developer",
                "value": "Title of the App Review Dialog used on Android"
            }
        ]
    },
    "appReviewDialogContent": "Support us with a review on the Google Play Store.",
    "@appReviewDialogContent": {
        "notes": [
            {
                "from": "developer",
                "value": "Content of the App Review Dialog used on Android"
            }
        ]
    },
    "appReviewDialogButtonDecline": "Not now",
    "@appReviewDialogButtonDecline": {
        "notes": [
            {
                "from": "developer",
                "value": "Decline button of the App Review Dialog used on Android"
            }
        ]
    },
    "appReviewDialogButtonAccept": "Write review",
    "@appReviewDialogButtonAccept": {
        "notes": [
            {
                "from": "developer",
                "value": "Accept button of the App Review Dialog used on Android"
            }
        ]
    },
    "instructionJunction": "{street1} and {street2}",
    "@instructionJunction": {
        "type": "text",
        "notes": [
            {
                "from": "developer",
                "value": "Junction name of two streets"
            }
        ],
        "placeholders": {
            "street1": {
                "example": "Av. Blanco Galindo"
            },
            "street2": {
                "example": "Av. 16 de Julio"
            }
        },
        "context-groups": [
            {
                "purpose": "informational",
                "contexts": [
                    {
                        "value": "{street1} example: Av. Blanco Galindo",
                        "context-type": "paramnotes"
                    },
                    {
                        "value": "{street2} example: Av. 16 de Julio",
                        "context-type": "paramnotes"
                    }
                ]
            }
        ]
    },
    "instructionVehicleLightRail": "Light Rail Train",
    "@instructionVehicleLightRail": {
        "notes": [
            {
                "from": "developer",
                "value": "Vehicle name (Light Rail Train)"
            }
        ]
    },
    "menuYourPlaces": "Your places",
    "savedPlacesSetIconLabel": "Change symbol",
    "savedPlacesSetNameLabel": "Edit name",
    "savedPlacesSetPositionLabel": "Edit position",
    "savedPlacesRemoveLabel": "Remove place",
    "savedPlacesSelectIconTitle": "Select symbol",
    "mapTypeLabel": "Map Type",
    "mapTypeStreetsCaption": "Streets",
    "mapTypeSatelliteCaption": "Satellite",
    "mapTypeTerrainCaption": "Terrain",
    "commonSave": "Save",
    "savedPlacesEnterNameTitle": "Enter name"
}